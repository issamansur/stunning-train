#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <cmath>
#include <fstream>
#include <sstream>
#include <stdexcept>

class MyClass {
public:
    MyClass() {
        std::cout << "Конструктор MyClass" << std::endl;
    }

    ~MyClass() {
        std::cout << "Деструктор MyClass" << std::endl;
    }

    void MyMethod() {
        std::cout << "Вызван MyMethod" << std::endl;
    }

    int Add(int a, int b) {
        return a + b;
    }

private:
    int privateData;
};

struct Point {
    int x;
    int y;
};

enum Color {
    RED,
    GREEN,
    BLUE
};

int Multiply(int a, int b) {
    return a * b;
}

template <typename T>
T GetMax(T a, T b) {
    return (a > b) ? a : b;
}

int main() {
    MyClass obj;
    obj.MyMethod();

    std::vector<int> numbers = {1, 2, 3, 4, 5};
    for (int num : numbers) {
        std::cout << num << " ";
    }
    std::cout << std::endl;

    try {
        int result = 10 / 0;
    } catch (const std::runtime_error& e) {
        std::cerr << "Ошибка: " << e.what() << std::endl;
    }

    std::ofstream outFile("example.txt");
    if (outFile.is_open()) {
        outFile << "Пример записи в файл" << std::endl;
        outFile.close();
    }

    Point p = {3, 4};
    std::cout << "Координаты точки: (" << p.x << ", " << p.y << ")" << std::endl;

    Color c = RED;
    std::cout << "Выбран цвет: " << c << std::endl;

    int maxNumber = GetMax(10, 20);
    std::cout << "Максимальное число: " << maxNumber << std::endl;

    return 0;
}

class Person {
public:
    Person(const std::string& name, int age)
        : name_(name), age_(age) {
    }

    void Greet() {
        std::cout << "Привет, меня зовут " << name_ << " и мне " << age_ << " лет." << std::endl;
    }

private:
    std::string name_;
    int age_;
};

void PrintPeopleInfo(const std::vector<Person>& people) {
    for (const Person& person : people) {
        person.Greet();
    }
}

void ExampleLambda() {
    std::vector<int> numbers = {1, 2, 3, 4, 5};

    std::for_each(numbers.begin(), numbers.end(), [](int x) {
        std::cout << x * 2 << " ";
    });
    std::cout << std::endl;
}

void ModifyNumber(int& num) {
    num *= 2;
}

int main() {
    Person person1("Анна", 25);
    Person person2("Иван", 30);

    person1.Greet();
    person2.Greet();

    std::vector<Person> people;
    people.push_back(person1);
    people.push_back(person2);

    PrintPeopleInfo(people);

    ExampleLambda();

    int number = 10;
    ModifyNumber(number);
    std::cout << "Измененное число: " << number << std::endl;

    return 0;
}