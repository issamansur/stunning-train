# Базовая настройка сервера
server {
    listen 80;

    server_name example.com;

    root /var/www/html;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    location / {
        index index.html;
    }

    location ~ \.php$ {
        include fastcgi_params;
        fastcgi_pass unix:/run/php/php7.4-fpm.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }

    location /static/ {
        alias /var/www/html/static/;
    }

    location /old {
        rewrite ^/old/(.*)$ /new/$1 permanent;
    }

    listen 443 ssl;
    ssl_certificate /etc/nginx/ssl/server.crt;
    ssl_certificate_key /etc/nginx/ssl/server.key;
}

# Базовая настройка сервера
server {
    listen 80;

    server_name yourdomain.com;

    root /var/www/yourdomain;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    location / {
        index index.html;  # Основной файл для директории
    }

    location ~ \.php$ {
        include fastcgi_params;
        fastcgi_pass unix:/run/php/php7.4-fpm.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }

    location /static/ {
        alias /var/www/yourdomain/static/;
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
    }

    location / {
        return 301 https://$host$request_uri;
    }

    listen 443 ssl;
    ssl_certificate /etc/nginx/ssl/yourdomain.crt;
    ssl_certificate_key /etc/nginx/ssl/yourdomain.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;

    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'";

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
}

proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:10m max_size=10g inactive=60m use_temp_path=off;

location ~ /\. {
    deny all;
}

location ~ \.git {
    return 404;
}

location /app/ {
    proxy_pass http://backend-server;
}

location /app/ {
    proxy_pass http://backend-server;
}

location /admin/ {
    auth_basic "Restricted";
    auth_basic_user_file /etc/nginx/htpasswd;
}

location /app/ {
    proxy_pass http://backend-server;
}

location /admin/ {
    auth_basic "Restricted";
    auth_basic_user_file /etc/nginx/htpasswd;
}

location ~* \.(jpg|jpeg|png|gif|ico)$ {
    expires 30d;
    add_header Cache-Control "public, max-age=2592000";
}

location /api/ {
    add_header 'Access-Control-Allow-Origin' '*';
    add_header 'Access-Control-Allow-Credentials' 'true';
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
}

location /s/ {
    rewrite ^/s/(.*)$ /shorturl.php?url=$1 last;
}